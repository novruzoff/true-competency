name: Daily Backup
on:
  schedule:
    - cron: "0 3 * * *" # 03:00 UTC daily
  workflow_dispatch: {} # allow manual runs

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Install Postgres client + DNS tools
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client dnsutils

      - name: Resolve Supabase host to IPv4
        id: dns
        env:
          HOST: ${{ secrets.SUPABASE_DB_HOST }} # e.g. db.stkwpilbzvzmgrxbsvcx.supabase.co
        run: |
          IPV4=$(dig +short A "$HOST" | head -n1)
          if [ -z "$IPV4" ]; then
            echo "IPv4 not found for $HOST"
            exit 1
          fi
          echo "ip=$IPV4" >> "$GITHUB_OUTPUT"

      - name: Dump Supabase DB via IPv4 (hostaddr)
        env:
          PGHOSTNAME: ${{ secrets.SUPABASE_DB_HOST }} # hostname for TLS/SNI
          PGHOSTADDR: ${{ steps.dns.outputs.ip }} # force IPv4 socket
          PGPORT: 5432
          PGDATABASE: ${{ secrets.SUPABASE_DB_NAME }} # usually "postgres"
          PGUSER: ${{ secrets.SUPABASE_DB_USER }} # usually "postgres"
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          TS=$(date -u +'%Y-%m-%d_%H-%M')

          # Use libpq conninfo with BOTH host (for TLS/SNI) and hostaddr (forces IPv4)
          CONNINFO="host=${PGHOSTNAME} hostaddr=${PGHOSTADDR} port=${PGPORT} dbname=${PGDATABASE} user=${PGUSER} sslmode=require"

          pg_dump --no-owner --no-privileges \
            --format=custom \
            --file="backup_${TS}.dump" \
            "$CONNINFO"

          ls -lh "backup_${TS}.dump"

      - name: Upload artifact (30 days)
        uses: actions/upload-artifact@v4
        with:
          name: supabase-backup
          path: backup_*.dump
          retention-days: 30
